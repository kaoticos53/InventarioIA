@page "/forgot-password"
@using MudBlazor
@using Inventario.Web.Models
@using Inventario.Web.Services.Interfaces
@inject NavigationManager Navigation
@inject IAuthService AuthService
@inject ISnackbar Snackbar
@inject ILogger<ForgotPassword> Logger

<PageTitle>Recuperar contraseña - Sistema de Inventario</PageTitle>

<MudThemeProvider Theme="_forgotPasswordTheme" IsDarkMode="true" />

<div class="forgot-password-container">
    <MudPaper Class="forgot-password-paper" Elevation="10">
        <div class="forgot-password-content">
            <!-- Logo y título -->
            <div class="forgot-password-logo">
                <MudAvatar Size="Size.Large" Class="mx-auto mb-3" Style="background: linear-gradient(135deg, var(--mud-palette-primary) 0%, var(--mud-palette-secondary) 100%);">
                    <MudIcon Icon="@Icons.Material.Filled.LockReset" Size="Size.Large" Color="Color.Surface" />
                </MudAvatar>
                <MudText Typo="Typo.h4" Class="text-center mb-1" Style="font-weight: 600;">¿Olvidaste tu contraseña?</MudText>
                <MudText Class="text-center mb-4" Style="color: var(--mud-palette-text-secondary);">
                    Ingresa tu correo electrónico y te enviaremos un enlace para restablecer tu contraseña.
                </MudText>
            </div>

            @if (_showSuccessMessage)
            {
                <MudAlert Severity="Severity.Success" Class="mb-4">
                    <MudText>@_successMessage</MudText>
                    <MudText Class="mt-2">Por favor, revisa tu bandeja de entrada y sigue las instrucciones.</MudText>
                </MudAlert>
            }
            else if (!string.IsNullOrEmpty(_errorMessage))
            {
                <MudAlert Severity="Severity.Error" Class="mb-4">
                    <MudText>@_errorMessage</MudText>
                </MudAlert>
            }

            <!-- Formulario de recuperación de contraseña -->
            <MudForm @ref="_form" @bind-IsValid="_isFormValid" ValidationDelay="0" Class="forgot-password-form">
                <MudTextField 
                    @bind-Value="_email" 
                    Label="Correo electrónico" 
                    For="() => _email" 
                    Variant="Variant.Outlined"
                    Margin="Margin.Dense"
                    AdornmentIcon="@Icons.Material.Filled.Email"
                    AdornmentAriaLabel="Correo electrónico"
                    Class="form-field"
                    Required="true"
                    RequiredError="El correo electrónico es obligatorio"
                    Immediate="true" />
                
                <MudButton 
                    Variant="Variant.Filled" 
                    Color="Color.Primary" 
                    FullWidth="true" 
                    ButtonType="ButtonType.Submit" 
                    Class="@(string.Join(" ", "mt-4 mb-3 forgot-password-button", _isLoading ? "loading" : ""))"
                    OnClick="HandleSubmit"
                    Disabled="!_isFormValid || _isLoading">
                    @if (_isLoading)
                    {
                        <MudProgressCircular Color="Color.Surface" Size="Size.Small" Class="mr-2" />
                    }
                    Enviar enlace de recuperación
                </MudButton>
                
                <div class="text-center mt-4">
                    <MudText Class="text-caption">
                        ¿Recordaste tu contraseña? 
                        <MudLink Href="/login" Class="font-weight-bold">Iniciar sesión</MudLink>
                    </MudText>
                </div>
            </MudForm>
        </div>
        
        <!-- Lado derecho con imagen -->
        <div class="forgot-password-sidebar">
            <div class="forgot-password-overlay"></div>
            <div class="forgot-password-sidebar-content">
                <MudIcon Icon="@Icons.Material.Filled.VerifiedUser" Size="Size.Large" Class="mb-4" Style="font-size: 4rem;" />
                <MudText Typo="Typo.h4" Class="mb-2">Seguridad primero</MudText>
                <MudText Class="mb-6">Protege tu cuenta con una contraseña segura</MudText>
                <MudDivider Light="true" Class="my-4" />
                <MudText Class="text-caption">© @DateTime.Now.Year Todos los derechos reservados</MudText>
            </div>
        </div>
    </MudPaper>
</div>

<style>
    .forgot-password-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        background-color: var(--mud-palette-background);
        padding: 1rem;
        background-image: linear-gradient(135deg, var(--mud-palette-dark) 0%, var(--mud-palette-surface) 100%);
    }
    
    .forgot-password-paper {
        display: flex;
        width: 100%;
        max-width: 1000px;
        border-radius: 16px;
        overflow: hidden;
        height: 650px;
        box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.36);
        backdrop-filter: blur(10px);
        background-color: var(--mud-palette-surface);
        border: 1px solid var(--mud-palette-lines-inputs);
    }
    
    .forgot-password-content {
        flex: 1;
        padding: 3rem;
        display: flex;
        flex-direction: column;
        justify-content: center;
        max-width: 500px;
        margin: 0 auto;
    }
    
    .forgot-password-sidebar {
        flex: 1;
        background-image: url('https://source.unsplash.com/random/800x600/?security,lock');
        background-size: cover;
        background-position: center;
        position: relative;
        display: none;
    }
    
    .forgot-password-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(135deg, rgba(126, 111, 255, 0.9) 0%, rgba(255, 128, 171, 0.9) 100%);
        opacity: 0.95;
    }
    
    .forgot-password-sidebar-content {
        position: relative;
        z-index: 1;
        color: white;
        padding: 3rem;
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        text-align: center;
    }
    
    .forgot-password-logo {
        margin-bottom: 2.5rem;
        text-align: center;
    }
    
    .forgot-password-form {
        width: 100%;
    }
    
    .form-field {
        margin-bottom: 1.5rem;
    }
    
    .forgot-password-button {
        height: 48px;
        font-weight: 600;
        letter-spacing: 0.5px;
        text-transform: uppercase;
        border-radius: 8px;
        transition: all 0.3s ease;
    }
    
    .forgot-password-button:not(:disabled):hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(126, 111, 255, 0.3);
    }
    
    .forgot-password-button:disabled {
        background-color: var(--mud-palette-action-disabled);
        color: var(--mud-palette-text-disabled);
    }
    
    .forgot-password-button.loading {
        opacity: 0.8;
        cursor: progress;
    }
    
    @@media (min-width: 960px) {
        .forgot-password-sidebar {
            display: block;
        }
    }
    
    @@media (max-width: 599px) {
        .forgot-password-container {
            padding: 0;
        }
        
        .forgot-password-paper {
            border-radius: 0;
            height: 100vh;
            max-width: 100%;
        }
        
        .forgot-password-content {
            padding: 2rem 1.5rem;
        }
    }
</style>

@code {
    private MudForm _form;
    private bool _isFormValid = false;
    private Dictionary<string, string> _formErrors = new();
    private bool _isLoading = false;
    private string _errorMessage = string.Empty;
    private string _successMessage = string.Empty;
    private bool _showSuccessMessage = false;
    
    private string _email = string.Empty;
    
    private MudTheme _forgotPasswordTheme = new();

    private async Task HandleSubmit()
    {
        try
        {
            _isLoading = true;
            _errorMessage = string.Empty;
            _showSuccessMessage = false;
            
            // Validar el formulario
            await _form.Validate();
            if (!_isFormValid)
            {
                _isLoading = false;
                return;
            }

            // Simular envío de correo de recuperación
            var result = await AuthService.ForgotPasswordAsync(_email);
            
            if (result.IsSuccess)
            {
                _successMessage = result.Message ?? "Se ha enviado un correo con las instrucciones para restablecer tu contraseña.";
                _showSuccessMessage = true;
                Snackbar.Add(_successMessage, Severity.Success);
                
                // Limpiar el formulario
                _email = string.Empty;
                _form.ResetValidation();
                StateHasChanged();
            }
            else
            {
                _errorMessage = result.Message ?? "Error al procesar la solicitud. Por favor, inténtalo de nuevo.";
                Snackbar.Add(_errorMessage, Severity.Error);
            }
        }
        catch (Exception ex)
        {
            _errorMessage = "Ocurrió un error al procesar tu solicitud. Por favor, inténtalo de nuevo más tarde.";
            Logger.LogError(ex, "Error al procesar la recuperación de contraseña");
            Snackbar.Add(_errorMessage, Severity.Error);
        }
        finally
        {
            _isLoading = false;
            StateHasChanged();
        }
    }
}
